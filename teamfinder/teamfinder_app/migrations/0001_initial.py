# Generated by Django 5.1.3 on 2024-11-16 11:47

import django.db.models.deletion
import taggit.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('group_id', models.AutoField(primary_key=True, serialize=False)),
                ('group_name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('post_id', models.AutoField(primary_key=True, serialize=False)),
                ('heading', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('finish', models.BooleanField(default=False)),
                ('amount', models.IntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Requirement',
            fields=[
                ('require_id', models.AutoField(primary_key=True, serialize=False)),
                ('req_faculty', models.CharField(max_length=255)),
                ('req_major', models.CharField(max_length=255)),
                ('year', models.IntegerField()),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=255)),
                ('email_address', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('major', models.CharField(max_length=255)),
                ('faculty', models.CharField(max_length=255)),
                ('year', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='RecruitPost',
            fields=[
                ('post', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='teamfinder_app.post')),
                ('status', models.CharField(max_length=50)),
                ('tag', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('team_id', models.AutoField(primary_key=True, serialize=False)),
                ('recruit_post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='teamfinder_app.post')),
                ('team_leader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='led_teams', to='teamfinder_app.user')),
            ],
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teamfinder_app.team')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teamfinder_app.user')),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('request_id', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='teamfinder_app.post')),
                ('requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teamfinder_app.requirement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='teamfinder_app.user')),
            ],
        ),
        migrations.CreateModel(
            name='PostComment',
            fields=[
                ('post_comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('comment', models.TextField()),
                ('reaction', models.CharField(blank=True, max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='teamfinder_app.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teamfinder_app.user')),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='teamfinder_app.user'),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('message_id', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to='teamfinder_app.user')),
            ],
        ),
        migrations.CreateModel(
            name='GroupMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teamfinder_app.group')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teamfinder_app.user')),
            ],
        ),
        migrations.AddField(
            model_name='group',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_groups', to='teamfinder_app.user'),
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('feedback_id', models.AutoField(primary_key=True, serialize=False)),
                ('communication_pt', models.IntegerField()),
                ('collaboration_pt', models.IntegerField()),
                ('reliability_pt', models.IntegerField()),
                ('technical_pt', models.IntegerField()),
                ('empathy_pt', models.IntegerField()),
                ('comment', models.TextField(blank=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_feedbacks', to='teamfinder_app.user')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='given_feedbacks', to='teamfinder_app.user')),
            ],
        ),
        migrations.CreateModel(
            name='DirectMessage',
            fields=[
                ('message', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='teamfinder_app.message')),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_direct_messages', to='teamfinder_app.user')),
            ],
        ),
        migrations.CreateModel(
            name='GroupMessage',
            fields=[
                ('message', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='teamfinder_app.message')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_messages', to='teamfinder_app.group')),
            ],
        ),
        migrations.AddField(
            model_name='requirement',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirements', to='teamfinder_app.recruitpost'),
        ),
        migrations.CreateModel(
            name='ResultPost',
            fields=[
                ('post', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='teamfinder_app.post')),
                ('tag', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
    ]
